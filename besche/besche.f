      SUBROUTINE BESCHE(F,C,ALFA,NUM,NU,N,RESULT,INFO)
C     COMPUTATION OF THE INTEGRALS OVER (0,C) OF THE FUNCTIONS
C     F(X)*J(ALFA(I)*X,NU), WHERE J(X,NU) IS THE BESSEL FUNCTION
C     OF THE FIRST KIND AND OF ORDER NU, AND I = 1,2,...,NUM.
      
C     INPUT PARAMETERS
C	F     - DOUBLE PRECISION FUNCTION, DEFINING THE INTEGRAND
C	        FUNCTION F(X). THE ACTUAL NAME FOR F NEEDS TO
C	        BE DECLARED EXTERNAL IN THE CALLING PROGRAM
C	C     - DOUBLE PRECISION
C	        UPPER LIMIT OF THE INTEGRATION INTERVAL
C	ALFA  - ONE-DIMENSIONAL ARRAY OF DOUBLE PRECISION
C               VARIABLES WHICH CONTAINS THE VALUES OF THE
C	        PARAMETER IN THE ARGUMENT OF THE BESSEL FUNCTION
C	        IF DABS(C*ALFA(I)).LT.1.0D-2, THE INTEGRAL IS NOT
C	        COMPUTED AND INFO(I) = -2
C	        THE DIMENSION OF ALFA IS NUM
C	NUM   - INTEGER
C	        NUMBER OF INTEGRALS TO BE COMPUTED
C	NU    - INTEGER
C               ORDER OF THE BESSEL FUNCTION
C               IF NU.LT.0 .OR. NU.GT.10, THE ROUTINE WILL END
C	        WITH INFO(I)=-1, I = 1,2,...,NUM
C	N     - INTEGER
C	        DEGREE OF THE CHEBYSHEV SERIES APPROXIMATION OF F(X)
C	        IF N.LT.3 .OR. N.GT.50, THE ROUTINE WILL END WITH
C               INFO(I)=-3, I = 1,2,...,NUM
C               THE VALUE OF N DETERMINES THE DIMENSION OF THE
C	        VECTORS B AND Q, (B(2*N),Q(N+1))
C      
C     OUTPUT PARAMETERS
C       RESULT - DOUBLE PRECISION ONE-DIMENSIONAL VECTOR
C                CONTAINING THE APPROXIMATIONS TO THE INTEGRALS
C                THE DIMENSION IS NUM
C	INFO   - INTEGER ONE-DIMENSIONAL VECTOR OF DIMENSION
C	         NUM
C                INFO(I) CONTAINS INFORMATION ON THE
C	         COMPUTATION OF RESULT(I)
C                 INFO(I) = -3 INVALID VALUE OF N
C	          INFO(I) = -2 INVALID VALUE OF C AND/OR ALFA
C	          INFO(I) = -1 INVALID VALUE OF NU
C	          INFO(I) = 0  NORMAL TERMINATION OF THE ROUTINE
C                 INFO(I).GT.0 DIFFICULTIES IN BBMOM
C      
C     SUBROUTINES OR FUNCTIONS NEEDED
C     CHEBY    - A SUBROUTINE FOR THE COMPUTATION OF THE
C                APPROXIMATE CHEBYSHEV SERIES COEFFICIENTS OF A
C                FUNCTION OVER A FINITE INTERVAL
C                CHEBY CALLS FFT AND FFTSTP
C
C     BBMOM
C     DABS (FORTRAN)
C     
      IMPLICIT NONE
      DOUBLE PRECISION ALFA,B,C,F,Q,RESULT
      DOUBLE PRECISION DABS
      DIMENSION ALFA(NUM),B(100),Q(51),RESULT(NUM)
      INTEGER I,IER,INFO,K,N,NU,NUM,N1
      DIMENSION INFO(NUM)
      EXTERNAL F
      DO 10 I=1,NUM
         INFO(I) = 0
         RESULT(I) = 0.0D+00
 10   CONTINUE
      IF (C.EQ.0.0D+00) GO TO 999
      DO 20 I=1,NUM
         INFO(I) = -1
 20   CONTINUE
      IF (NU.LT.0.OR.NU.GT.10) GO TO 999
      DO 30 I=1,NUM
         INFO(I) = -3
 30   CONTINUE
C     COMPUTATION OF THE CHEBYSHEV SERIES COEFFICIENTS
      CALL CHEBY(F,0.0D+00,C,N,Q,IER)
      IF (IER.NE.0) GO TO 999
C     MAIN DO-LOOP
      DO 50 I=1,NUM
         INFO(I) = -2
         IF (DABS(ALFA(I)*C).LT.1.0D-03) GO TO 50
C COMPUTATION OF THE MODIFIED MOMENTS
         CALL BBMOM(ALFA(I)*C,NU,N,B,IER)
         INFO(I) = IER
         IF (IER.NE.0) GO TO 50
C     COMPUTATION OF THE INTEGRALS
         RESULT(I)=0.5D+00*B(1)*Q(1)
         N1= N+1
         DO 40 K=2,N1
            RESULT(I)=RESULT(I)+B(K)*Q(K)
 40      CONTINUE
         RESULT(I)=0.5D+00*C*RESULT(I)
 50   CONTINUE
 999  RETURN
      END


      SUBROUTINE BBMOM(A,NU,N,B,INFO)
C     COMPUTATION OF INTEGRALS OVER ( 0 , 1 ) OF THE FUNCTION
C     J(A*X,NU)*TS(X,K), WHERE J(X,NU) IS THE BESSEL FUNCTION
C     OF THE FIRST KIND AND ORDER NU, AND TS(X,K) IS THE SHIFTED
C     CHEBYSHEV POLYNOMIAL OF DEGREE K, AND WHERE K=0,1,2,...,N.
C     THESE INTEGRALS ARE STORED IN B(1),B(2),..B(N+1)
C
C     INPUT PARAMETERS
C	A  - DOUBLE PRECISION
C	    PARAMETER IN THE ARGUMENT OF THE BESSEL FUNCTION
C           THE ABSOLUTE VALUE OF A MUST BE GREATER THAN 0.01
C       NU - INTEGER, ORDER OF THE BESSEL FUNCTION
C	     NU MUST BE GREATER THAN -1 AND LESS THAN 11
C       N  - INTEGER, MAXIMAL DEGREE OF THE CHEBYSHEV POLYNOMIAL
C	     N MUST BE LESS THAN OR EQUAL TO 100
C	      
C     OUTPUT PARAMETERS
C	B    - ONE-DIMENSIONAL VECTOR OF DOUBLE PRECISION NUMBERS
C              WHICH CONTAINS THE INTEGRALS
C	INFO - INTEGER
C	     = -1 INVALID INPUT PARAMETERS
C	     = 0 NORMAL COMPUTATION
C	     .GT.0 SINGULARITY OF THE SYSTEM OF LINEAR EQUATIONS

C     SUBROUTINES OR FUNCTIONS NEEDED
C       BESINT
C       BES9
C       BES10
C       RATEV
C       DGBFA, DGBSL (LINPACK)
C       DAXPY,DDOT,DSCAL,IDAMAX (LINPACK)
C       MAX0,DABS (FORTRAN)
C
C
C
C
C
C
      IMPLICIT NONE
      DOUBLE PRECISION AMM
      DOUBLE PRECISION A,ABD,AC,AFA0,AFA1,AFA2,AFA3,AFN0,AFN1,
     .     AFN2,AFN3,AK,AL,AM,AN,ANU,ANU2,A2,A3,B,BB,BES,BESINT,
     .     BIN,DK,E,F,FACT,FACTOR,G,H,PSIN,PSIP,SIGN,TERM
c      DOUBLE PRECISION BES9,BESI0,
      INTEGER I,IB,INFO,J,K,L,M,N,NA,NN,NU,NV,IPVT
      DIMENSION ABD(15,200),AM(4),B(200),BB(4),BES(11),IPVT(200),
     .     PSIN(4),PSIP(4),TERM(4)
C
C      
      INFO = - 1
C     TEST ON THE INPUT PARAMETERS A AND NU
      IF (DABS(A).LT.1.0D-3 .OR. NU.LT.0 .OR. NU.GT.10) GO TO 999
C     TEST ON THE VALUE OF N. IF A VALUE OF N.GT.100 IS NEEDED,
C     THIS TEST MAY BE CHANGED, BUT THE DIMENSIONS OF THE ARRAYS
C     ABD,B AND IPVT MUST BE CHANGED ACCORDINGLY (=2*N)
      IF (N.GT.100) GO TO 999
      INFO = 0
      ANU = NU
      A2 = 2.0D+00/A
      NA = 0.5D+00*DABS(A)
      NV = N
      IF(N.GE.NA) NV = 3
C     COMPUTATION OF THE STARTING VALUES
!      BES(11) = BES10(A)
!      BES(10) = BES9(A)
      BES(11) = BESSEL_JN(10,A)
      BES(10) = BESSEL_JN(9,A)
      AK = 9.0D+00
      DO 10 I = 1,9
         L = 10-I
         BES(L) = A2*AK*BES(L+1)-BES(L+2)
         AK = AK-1.0D+00
 10   CONTINUE
      BIN = BESINT(A)
      IF (NU.EQ.0) GO TO 70
      F = BES(NU)
      IF (NU.EQ.1) GO TO 60
      IF (2*(NU/2).EQ.NU) GO TO 30
      AM(1) = 1.0D+00-BES(1)
      DO 20 L=2,NU,2
         BIN = BIN-2.0D+00*BES(L)
         AM(1) = AM(1)-2.0D+00*BES(L+1)
 20   CONTINUE
      GO TO 50
 30   AM(1) = BIN
      BIN = 1.0D+00+BES(1)
      DO 40 L=2,NU,2
         AM(1) = AM(1)-2.0D+00*BES(L)
         BIN = BIN-2.0D+00*BES(L-1)
 40   CONTINUE
 50   AM(2) = ANU*BIN-A*BES(NU)
      GO TO 80
 60   AM(1) = 1.0D+00-BES(1)
      AM(2) = ANU*BIN-A*BES(1)
      GO TO 80
 70   AM(1) = BIN
      F = -BES(2)
      AM(2) = -A*F
 80   F = A*F
      G = A
      DO 90 I = 3,4
         E = I-2
         AM(I) = -(E*E-ANU*ANU)*AM(I-2)+((E+ANU)*BES(NU+1)-F)*G
         G = A*G
 90   CONTINUE
      B(1) = A2*AM(1)
      B(2) = (A2*AM(2)-AM(1))*A2
      B(3) = ((2.D+00*A2*AM(3)-4.D+00*AM(2))*A2+AM(1))*A2
      B(4) = (((4.0D+00*A2*AM(4)-12.0D+00*AM(3))*A2+9.0D+00*AM(2))
     . *A2-AM(1))*A2
      IF (N.LE.3) GO TO 999
      E = -16.0D+00/(A*A)
      F = ANU*ANU+0.25D+00*A*A
      G = 4.0D+00*ANU*ANU
      H = 6.0D+00*(ANU*ANU-1.0D+00)-3.0D+00*A*A/8.0D+00
      DO 100 K=1,4
         L = 8-K
         B(L) = B(L-3)
 100  CONTINUE
      DO 110 K=1,4
         L = 8-K
         B(K) = B(L)
         BB(K) = B(K+3)
         
 110  CONTINUE
      B(8) = ((9.0D+00-F)*B(6)+(4.0D+00+G)*B(5)-0.5D+00*H*B(4))*E
      IF (NV.EQ.4) GO TO 130
      NN = NV-4
C     FORWARD RECURSION
      DO 120 K = 1,NN
         DK = K
         B(K+8) = (((DK+3.0D+00)**2-F)*B(K+6)+(G+2.0D+00*(DK+
     .        2.0D+00))*B(K+5)-(2.0D+00*DK*DK+H)*B(K+4)+(G-2.0D+00*
     .        (DK-2.0D+00))*B(K+3)+((DK-3.0D+00)**2-F)*B(K+2))*E-B(K)
 120  CONTINUE
 130  NN = NV+1
      DO 140 K=1,NN
         B(K) = B(K+3)
 140  CONTINUE
      IF (N.LT.NA) GO TO 999
C     CONVERSION OF THE RECURRENCE RELATION INTO A BAND SYSTEM
C     OF LINEAR EQUATIONS. THE ARRAY ABD CONTAINS THE ELEMENTS
C     OF THE BAND MATRIX. THE VECTOR B CONTAINS THE RIGHT HAND SIDE
      IB = MAX0(N+19,2*NA)
      M = IB-4
      A2 = A*A
      A3 = A*A2
      ANU2 = ANU*ANU
      AC = A2/16.0D+00
      AL = ANU2+A2/4.0D+00
      AMM = 4.0D+00*(ANU2+1.0D+00)
      AN = 6.0D+00*(ANU2-1.0D+00)-3.0D+00*A2/8.0D+00
      DO 150 I=1,M
         AK = I+1
         ABD(7,I) = AC
         ABD(8,I) = 0.0D+00
         ABD(9,I) = (AK+3.0D+00)**2-AL
         ABD(10,I) = AMM+2.0D+00*(AK+1.0D+00)
         ABD(11,I) = -2.0D+00*(AK+2.0D+00)**2-AN
         ABD(12,I) = AMM-2.0D+00*(AK+3.0D+00)
         ABD(13,I) = (AK+1.0D+00)**2-AL
         ABD(14,I) = 0.0D+00
         ABD(15,I) = AC
         B(I) = 0.0D+00
 150  CONTINUE
      B(1) = -(4.0D+00+AMM)*BB(4)+(8.0D+00+AN-AC)*BB(3)+(4.0D+00-
     .     AMM)*BB(2)-(1.0D+00-AL)*BB(1)
      B(2) = (18.0D+00+AN)*BB(4)+(6.0D+00-AMM)*BB(3)+(AL-AC)*BB(2)
      B(3) = (8.0D+00-AMM)*BB(4)-(1.0D+00-AL)*BB(3)-AC*BB(1)
      B(4) = -(4.0D+00-AL)*BB(4)-AC*BB(2)
      B(5) = -AC*BB(3)
      B(6) = -AC*BB(4)
      AFN0 = 0.0D+00
      AFN1 = 0.0D+00
      AFN2 = 0.0D+00
      AFN3 = 0.0D+00
      AFA0 = BES(NU+1)
      IF (NU.EQ.0) GO TO 180

      AFA1 = A*BES(NU)-ANU*AFA0
      IF (NU.EQ.1) GO TO 170
      IF (NU.EQ.2) GO TO 160
      IF (NU.GT.3) GO TO 190
      AFN3 = 0.125D+00*A3
      GO TO 190
 160  AFN2 = 0.25D+00*A2
      GO TO 190
 170  AFN1 = 0.5D+00*A
      AFN3 =-0.375D+00*A3
      GO TO 190
 180  AFN0 = 1.0D+00
      AFN2 = -0.5D+00*A2
      AFA1 = -A*BES(2)
 190  AFA2 = (ANU2-A2)*AFA0-AFA1
      AFA3 = -2.0D+00*A2*AFA0+(ANU2-1.0D+00-A2)*AFA1-3.0D+00*AFA2
      PSIP(1) = -AFN0
      PSIN(1) = AFA0
      PSIP(2) = AFN0-1.5D+00*AFN1
      PSIN(2) = -AFA0-1.5D+00*AFA1
      PSIP(3) = -AFN0+7.5D+00*AFN1-3.75D+00*AFN2
      PSIN(3) = AFA0+7.5D+00*AFA1+3.75D+00*AFA2
      PSIP(4) = AFN0-31.5D+00*AFN1+52.5D+00*AFN2-13.125D+00*AFN3
      PSIN(4) = -AFA0-31.5D+00*AFA1-52.5D+00*AFA2-13.125D+00*AFA3
      SIGN = -1.0D+00
      IF (2*(IB/2).EQ.IB) SIGN = 1.0D+00
      J = M-1
      DO 210 K = 1,2
         FACT = IB+K-1
         FACT = 1.0D+00/(FACT*FACT)
         FACTOR = FACT
         B(J) = 0.0D+00
         DO 200 I = 1,4
            TERM(I) = (SIGN*PSIP(I)-PSIN(I))*FACTOR
            FACTOR = -FACTOR*FACT
            B(J) = B(J)+TERM(I)
 200     CONTINUE
         B(J) = -AC*B(J)
         J = J+1
         SIGN = -SIGN
 210  CONTINUE
C     SOLUTION OF THE BAND SYSTEM
      CALL DGBFA(ABD,15,M,6,2,IPVT,INFO)
      IF (INFO.NE.0) GO TO 999
      CALL DGBSL(ABD,15,M,6,2,IPVT,B,0)
      DO 220 K=4,N
         J = N+5-K
         B(J) = B(J-4)
 220  CONTINUE
      DO 230 K=1,4
         B(K) = BB(K)
 230  CONTINUE
 999  RETURN
      END

      DOUBLE PRECISION FUNCTION BESINT(X)
C     THIS FUNCTION EVALUATES THE INTEGRAL OVER (0,X) OF THE BESSEL
C     FUNCTION OF THE FIRST KIND AND ORDER ZERO (J0(X)).
C     THE APPROXIMATION IS A CHEBYSHEV SERIES APPROXIMATION, GIVEN BY
C     Y.L.LUKE, THE SPECIAL FUNCTIONS AND THEIR APPROXIMATIONS, VOL.2,
C     ACADEMIC PRESS, NEW YORK, 1969>
c      DOUBLE PRECISION BESINT
      IMPLICIT NONE
      DOUBLE PRECISION A,ABSX,B,C,D,F,H,X,Y
      DOUBLE PRECISION DABS,DCOS,DSIN,DSQRT
      DIMENSION A(2),B(16),C(51)
      INTEGER IER,J,K,L,M,N
C
      DATA B(1),B(2),B(3),B(4),B(5),B(6),B(7),B(8),B(9),
     .     B(10),B(11),B(12),B(13),B(14),B(15),B(16)
     .                         /1.296717541210530D0,-.3652027407415854D0
     .   , .5082188856607893D0,-.3018069121169983D0, .0857603874415583D0
     .   ,-.0144410725385005D0, .0016245557648227D0,-.0001314897320073D0
     .   , .0000080523001715D0,-.0000003869533776D0, .0000000150020742D0
     .   ,-.0000000004796070D0, .0000000000128689D0,-.0000000000002941D0
     .   , .0000000000000058D0,-.0000000000000001D0/
      
      DATA C(1),C(2),C(3),C(4),C(5),C(6),C(7),C(8),C(9),C(10),
     .     C(11),C(12),C(13),C(14),C(15),C(16),C(17),C(18),C(19),
     .     C(20),C(21),C(22),C(23),C(24),C(25)
     .                         /1.974815231629769D0,-.0162295522389878D0
     .   ,-.0032741117973392D0, .0003692769926551D0,-.0000020837134761D0
     .   ,-.0000068286101720D0, .0000014114088947D0,-.0000001069995982D0
     .   ,-.0000000268570647D0, .0000000128529490D0,-.0000000027829276D0
     .   , .0000000002335369D0, .0000000000891678D0,-.0000000000515179D0
     .   , .0000000000149048D0,-.0000000000024280D0,-.0000000000001515D0
     .   , .0000000000002887D0,-.0000000000001274D0, .0000000000000361D0
     .   ,-.0000000000000057D0,-.0000000000000008D0, .0000000000000011D0
     .   ,-.0000000000000005D0, .0000000000000002D0/
      
      DATA C(26),C(27),C(28),C(29),C(30),C(31),C(32),C(33),C(34),C(35),
     .     C(36),C(37),C(38),C(39),C(40),C(41),C(42),C(43),C(44),C(45),
     .     C(46),C(47),C(48),C(49),C(50),C(51)
     .                       /-.1155333494819890D0,-.0556179374241152D0
     .  , .0024040410708726D0, .0001964777763303D0,-.0000546215764981D0
     .  , .0000049615339563D0, .0000004376239290D0,-.0000002647663970D0
     .  , .0000000534450982D0,-.0000000037890654D0,-.0000000015367250D0
     .  , .0000000007574125D0,-.0000000001861612D0, .0000000000216334D0
     .  , .0000000000048002D0,-.0000000000038217D0, .0000000000013384D0
     .  ,-.0000000000002930D0, .0000000000000180D0, .0000000000000198D0
     .  ,-.0000000000000122D0, .0000000000000044D0,-.0000000000000011D0
     .  , .0000000000000001D0, .0000000000000001D0,-.0000000000000001D0/
C     
      BESINT = 0.0D+00
      H = 0.0D+00
      ABSX = DABS(X)
      IF(X.EQ.0.0D+00) GO TO 999
      IF (ABSX.GT.8.0D+00) GO TO 20
      Y = 0.625D-01*ABSX*ABSX-2.0D+00
      F = B(16)
      DO 10 K=1,15
         D = BESINT
         BESINT = F
         L=16-K
         F = B(L)+Y*BESINT-D
 10   CONTINUE
      BESINT = 0.125D+00*X*(F-BESINT)
      GO TO 999
 20   Y = 2.0D+01/ABSX-2.0D+00
      M = 25
      N = 24
      DO 40 J=1,2
         F = C(M)
         DO 30 K=1,N
            D = H
            H = F
            L = M-K
            F = C(L)+Y*H-D
 30      CONTINUE
         A(J) = 0.5D+00*(F-D)
         M = 51
         N = 25
         H = 0.0D+00
 40   CONTINUE
      H = ABSX+0.7853981633974483D+00
      BESINT = 1.0D+00-0.7978845608028654D+00*(DCOS(H)*A(1)-
     .     DSIN(H)*A(2))/DSQRT(ABSX)
      IF (X.LT.0.0D+00) BESINT = -BESINT
 999  RETURN
      END

      
      SUBROUTINE CHEBY(F,A,B,N,C,IER)
C     THIS IS AN EXPERIMENTAL SUBROUTINE (NOT WRITTEN IN STANDARD
C     FORTRAN, SINCE DOUBLE PRECISION COMPLEX ARITHMETIC IS USED),
C     WHICH COMPUTES APPROXIMATIONS C(I),I=1,2,...,N+1 TO THE
C     COEFFICIENTS OF THE TRUNCATED CHEBYSHEV SERIES OF DEGREE N
C     OF THE FUNCTION F, OVER THE INTERVAL (A,B).
C      
C     THE METHOD OF COMPUTATION IS BASED ON THE FFT-ALGORITHM AS
C     DESCRIBED BY J.STOER, EINFUEHRUNG IN DIE NUMERISCHE MATHEMATIK I
C     SPRINGER VERLAG 1972,P.66
C      
C     THIS ROUTINE CALLS A SUBROUTINE FOR COMPUTING THE FFT. WE HAVE
C     USED SUBROUTINE FFT, WRITTEN BY C.DE BOOR, FFT AS NESTED
C     MULTIPLICATION WITH A TWIST, SIAM J.SCIENT.STAT.COMP.1 (1980),
C     PP.171-178
C      
C	INPUT PARAMETERS
C     F    - DOUBLE PRECISION FUNCTION
C            THIS FUNCTION HAS TO BE APPROXIMATED BY A TRUNCATED
C            CHEBYSHEV SERIES EXPANSION
C     A,B  - DOUBLE PRECISION VARIABLES
C            LIMITS OF THE INTERVAL OF APPROXIMATION
C     N    - INTEGER
C            DEGREE OF THE APPROXIMATION (N.GT.2 .AND. N.LE.50)
C
C     OUTPUT PARAMETERS
C     C    - ONE-DIMENSIONAL ARRAY OF DOUBLE PRECISION VARIABLES
C            CONTAINING THE APPROXIMATIONS TO THE CHEBYSHEV SERIES
C            COEFFICIENTS. THE FIRST COEFFICIENT (C(1)) HAS TO BE
C            HALVED.
C     IER  - INTEGER
C            =0 NORMAL COMPUTATION
C            =1 INVALID N
      
      IMPLICIT NONE
      DOUBLE PRECISION A,B,BMA,BPA,C,DC,DI,DN,F,PI
      DOUBLE PRECISION DCOS,DREAL
      INTEGER I,IER,INZEE,J,L,N,ND2,NP1,N2
      DOUBLE COMPLEX AA,BB,DCMPLX
      DIMENSION AA(100),BB(100),C(51)
      IER = 1
      IF (N.LT.3.OR.N.GT.50) GO TO 999
      IER = 0
      NP1 = N+1
      N2 = N*2
      PI = 3.141592653589793D+00
      DN = N
      BMA = (B-A)/2.0D+00
      BPA = (B+A)/2.0D+00
      AA(1) = DCMPLX(F(B),0.0D+00)
      AA(NP1) = DCMPLX(F(A),0.0D+00)
      ND2 = (N+1)/2
      DO 10 I=2,ND2
         DI = I-1
         DC = DCOS(PI*DI/DN)

         AA(I) = DCMPLX(F(DC*BMA+BPA),0.0D+00)
         L = N+2-I
         AA(L) = DCMPLX(F(-DC*BMA+BPA),0.0D+00)
 10   CONTINUE
      IF(2*(N/2).EQ.N) AA(ND2+1) = DCMPLX(F(BPA),0.0D+00)
      DO 20 I=2,N
         J = N2-I+2
         AA(J) = AA(I)
 20   CONTINUE
      INZEE = 1
      CALL FFT(AA,BB,N2,INZEE)
      IF(INZEE.EQ.2) GO TO 40
      DO 30 I=1,NP1
         C(I) = DREAL(AA(I))/DN
 30   CONTINUE
      GO TO 60
 40   DO 50 I=1,NP1
         C(I) = DREAL(BB(I))/DN
 50   CONTINUE
 60   C(NP1) = C(NP1)*0.5D+00
 999  RETURN
      END
   

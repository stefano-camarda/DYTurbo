# Process settings
sroot        = 7e3  # Center-of-mass energy
ih1          = 1    # Hadron 1: 1 for proton, -1 for antiproton
ih2          = 1    # Hadron 2: 1 for proton, -1 for antiproton
nproc        = 3    # Process: 1) W+; 2) W-; 3) Z/gamma*

# Perturbative order
# fixedorder_only = true   # Evaluate predictions at fixed order
# fixedorder_only = false  # Evaluate predictions including qt-resummation
fixedorder_only = false
order           = 3        # QCD order: 0) LO(+LL), 1) NLO(+NLL), 2) NNLO(+NNLL), 3) N3LO(+N3LL)

# Non-perturbative form factor, S_NP = exp(-npff(b))
# 0: Gaussian (BLNY)                 npff(b) = (g1 + g2*log(m/Q0) + g3*log(100*m/sqrt(s)))*b^2
npff = 0 

# Gaussian options (npff = 0)
g1 = 0.8
g2 = 0
g3 = 0
Q0 = 1

#PDF settings
LHAPDFset    = NNPDF31_nnlo_as_0118 # PDF set from LHAPDF
LHAPDFmember = 0                    # PDF member

# Functional form of QCD scales (mV: wmass or zmass, pT: boson transverse momentum, mjj: dijet invariant mass)
#0: mu^2 = mV^2
#1: mu^2 = mll^2
#2: mu^2 = mll^2+pT^2
#3: mu^2 = mll^2+pT^2+mjj^2
#4: mu^2 = (pT + sqrt(mll^2+pT^2))^2
fmuren = 1     # Functional form of the renormalisation scale
fmufac = 1     # Functional form of the factorisation scale
fmures = 1     # Functional form of the resummation scale (forms >= 2 are equivalent to 1)

# QCD scale settings
kmuren = 0.5         # Scale factor for the renormalisation scale
kmufac = 0.5         # Scale factor for the factorisation scale
kmures = 0.5         # Scale factor for the resummation scale

# EW scheme
#0: Input: alpha(mZ), zmass, xw;     Derived: wmass, Gf
#1: Input: Gf, wmass, zmass;         Derived: xw, alpha(mZ)    [Gmu scheme]
#2: Input: Gf, alpha(mZ), xw, Gf;    Derived: wmass, zmass
#3: All masses and couplings determined by inputs
ewscheme = 1

# EW parameters
Gf    = 1.1663787e-5         # G-Fermi
zmass = 91.1876              # Mass of the Z boson
wmass = 80.385               # Mass of the W boson
xw    = 0.23153              # Weak-mixing angle    (not used in the Gmu scheme)
aemmz = 7.7585538055706e-03  # alpha_EM(MZ)         (not used in the Gmu scheme)

# W and Z total widths used in the propagator are determined by the following inputs
zwidth = 2.4950          # Width of the Z boson
wwidth = 2.091           # Width of the W boson
runningwidth = false     # Use Z and W propagators including energy-dependent width effects

# CKM matrix
Vud = 0.97427
Vus = 0.2253
Vub = 0.00351
Vcd = 0.2252
Vcs = 0.97344
Vcb = 0.0412

# Prescription to avoid the Landau pole in the Bessel inverse transform
# 0: bstar prescription, which freezes b at bmax: b -> bstar = b/sqrt(1+b^2/bmax^2)
# 2: Minimal prescription (complex plane)
bprescription = 0

#Value of blim for the bstar prescription. Positive values set a fixed bmax=blim, a negative values sets bmax=b_L/(-blim), where b_L is the Landau singularity.
blim         = 3

# Type of PDF evolution
#0: FFN five-flavour backward evolution
#1: FFN five-flavour backward evolution with Pegasus-QCD
#2: VFN direct Mellin transform from LHAPDF
#3: VFN Pegasus-QCD
evolmode = 3

# Resummation damping
damp = true

# Resummation damping function
# 1: Gaussian:    exp(-(k*mll-qt)^2)/(delta*mll)^2
# 2: Exponential: exp((k*mll)^-qt^2)/(delta*mll)^2
# 3: Cosine:      cos(PI/(delta*mll)*(qt-k*mll))+1)/2
dampmode = 1
dampk = 0.75
dampdelta = 0.5

# qt-subtraction cut-off. Both conditions are applied, at least one between qtcut and xqtcut must be > 0
xqtcut = 0.008  # cutoff on qt/m
qtcut = 0.      # cutoff on qt

# Integration settings
rseed        = 123456         # Random seed for MC integration

# Term switches
doBORN = true
doCT   = true
doVJ   = true

doVJREAL = true
doVJVIRT = true

# Integration type: true -> quadrature, false -> vegas
BORNquad = true
CTquad   = true
VJquad   = false

# Multithreading parallelisation
cores         = 0   # Number of parallel threads (0 for turning off parallelisation)

# Cuba settings
cubaverbosity     = 0     # Cuba info messsages, from 0 to 3
cubanbatch        = 1000  # The batch size for sampling in Cuba vegas integration
niterBORN         = 5     # Only for 2d and 3d cuhre integration of resummed part
niterCT           = 5     # Only for 2d and 3d cuhre integration of counter term
niterVJ           = 10    # Only for 3d cuhre integration of V+J

#Vegas settings
vegasncallsBORN   = 1000     # only for res 4d vegas integration
vegasncallsCT     = 100000   # only for 6d and 8d vegas integration of the counter term
vegasncallsVJLO   = 10000000 # only for lo 7d vegas integration
vegasncallsVJREAL = 10000000 # only for real 10d vegas integration
vegasncallsVJVIRT = 1000000  # only for virt 8d vegas integration

# cubature settings
relaccuracy = 1e-3 # target relative uncertainty of each term
absaccuracy = 0    # target absolute uncertainty of each term in fb

# Lepton cuts
# Total cross section or with lepton cuts
makecuts = true

# charged leptons cuts
lptcut = 20
lycut = 2.4 # absolute rapidity cut

# leptons and antileptons cuts
lepptcut = 0
lepycut = 1000
alpptcut = 0
alpycut = 1000

#absolute-rapidity-ordered leptons (central and forward)
lcptcut = 0
lcymin = 0
lcymax = 1000
lfptcut = 0
lfymin = 0
lfymax = 1000

# cuts on neutrino and transverse mass (these cuts are applied only in W processes)
etmisscut = 0
mtcut = 0

#costh CS
cthCSmin = -1
cthCSmax = +1

# Output settings
output_filename = z-7tev-atlas  # output filename
texttable   = true         # dump result table to text file (including pdf variations)
redirect    = false        # redirect stdout and stderr to log file (except for gridverbose output)
unicode     = true         # use unicode characters for the table formatting
silent      = false        # no output on screen (except for gridverbose output)
makehistos  = true         # fill histograms
gridverbose = false        # printout number of events to keep job alive when running on grid

# binning

# normalise cross sections by bin width
ptbinwidth = true
ybinwidth  = false
mbinwidth  = false

# qt, y, m bins
qt_bins =  [ 0 2 4 6 8 10 12 14 16 18 22 26 30 34 38 42 46 50 54 60 70 80 100 150 200 300 800 3500 ]
y_bins = [ -2.4  2.4 ]
m_bins = [ 66 116 ]
